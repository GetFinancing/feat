[tox]
envlist = py27-{test,security}
;skipsdist = true
skipsdist = {env:TOXBUILD:false}
skip_missing_interpreters = true

[testenv:build-dev]
skipsdist = true
basepython = python2.7
envdir = {toxworkdir}/py27
deps = -r{toxinidir}/requirements_dev.txt
commands =
    bumpversion --allow-dirty dev
    python setup.py sdist
    python setup.py bdist_wheel

[testenv:build-rel]
skipsdist = true
basepython = python2.7
envdir = {toxworkdir}/py27
deps = -r{toxinidir}/requirements_dev.txt
commands =
    bumpversion --allow-dirty patch
    python setup.py sdist
    python setup.py bdist_wheel

[testenv:publish]
skipsdist = true
basepython = python2.7
envdir = {toxworkdir}/py27
deps = -r{toxinidir}/requirements_dev.txt
commands =
    twine upload -r getfinancing dist/*

[testenv]
envdir =
    py27: {toxworkdir}/py27
setenv =
    PYTHONPATH = {toxinidir}
deps =
    -r{toxinidir}/requirements_dev.txt
;    py27: -r{toxinidir}/requirements_legacy.txt
; If you want to make tox run the tests with the same versions, create a
; requirements.txt with the pinned versions and uncomment the following line:
    -r{toxinidir}/requirements.txt
whitelist_externals = bash
commands =
    pip install -U pip
    test: coverage run --source getfinancing -m pytest -l --basetemp={envtmpdir} --junit-prefix={envname} --junitxml=junit/junit-{envname}.xml
    test: coverage report -m
    test: coverage html
    test: coverage xml
